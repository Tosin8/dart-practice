Dart Overview: 

Introduction: 
What is Dart? 

1. Dart is a client optimized language for developing and the goal of fast apps on any platform, a productive programming language for multiplatform development. Being paired with a 'Flexible execution runtime platform' for app frameworks, which are Native Platforms and Web Platforms. 
2. Dart is designed for a technical envelope that is particularly suited to client development, leveraging on both development ( sub-second stateful hot reload) and high quality production experiences across a wide variety of compilation targets (web, mobile and desktop)
3. Dart forms the foundation of flutter.It provides the language and runtimes that power flutter apps and it supports core tasks like - formatting, analyzing and testing code. 

Characteristics of Dart language
1. It is type safe, i.e. it uses static type checking to ensure that a variable's value always matches the variable's static type. This method is known as Sound Typing. (Although, types are mandatory, type annonations are optional because of type inference). 
2. Dart Typing system is Flexible, allowing the use of dynamic type combined with runtime checks, which are be useful during experimentation or for code that needs to be especially dynamic. 
3. Dart offers SOUND NULL SAFETY (i.e values can't be null unless it's made to be)

Dart Libraries: 
1. DART: CORE - built in types, collections and other core functionalities for every dart program. 
2. DART: COLLECTIONS - richer collection types such as queues, linked lists, hashmaps and binary trees. 
3. DART:CONVERT - encoders and decorders for converting between different data representatives including JSON and UTF- 
4. DART:MATH - mathematical constants and functions, and random number generation
5. DART:IO - file, socket,http and other i/o support for non web application
6. DART:ASYNC - support for asynchronous programming with classes such as Future and Stream
7. DART:HTML - html element and other resources for web based application that needs to interact with the browser nd the document object model. (dom)
8. DART:ISOLATE - Concurent programming using isolates, independent workers that are similar to threads but don't share memory, communications only through messages. 

Dart Platforms: It's compiler technology lets code to be run in different ways - 
1. NATIVE PLATFORMS: for apps targeting mobile and desktop devices, dart includes both a Dart Vm with just in time(JIT) compilation and an ahead of time (AOT) compiler for producing machine code. 
2. WEB PLATFORMS: for apps targeting the web, DArt can compile for development or production purposes. Its web compiler translates DArt into Javascript.
     * Development Toolchain: fast incremental compilation stateful hot reload ( ARM32, ARM64)
     * production Toolchain: fastest native output smallest runtime (x86_64, Javascript)